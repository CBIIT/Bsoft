#!/usr/bin/perl -w

#----------------------------------------------------------#
# Script to prepare documentation for Bsoft programs
# Author: Bernard Heymann
# Created: 20010210
# Modified: 20180924
#----------------------------------------------------------#

# Bsoft program documentation rules:
#	1.	The output generated by the program name alone is parsed.
#	2.	This output must contain the following keywords:
#			Usage		the usage on the command line
#			Options 	the options defined for the program
#	3.	The first line following after the usage line is taken to be
#		a brief description.
#

use strict;
use warnings;
use File::Basename;

my $progdir = "programs/";

if ( ! -d $progdir ) { mkdir $progdir; }

document_programs();

exit;

sub document_programs {
	my $filename = $progdir."bsoft_programs.html";
	my $topfile = open_html_file($filename, "Program listing");
	my $count = 0;
	print $topfile "<center><h1><i><font color=\"#000099\">Bsoft programs</font></i></h1></center>\n";
	print $topfile "<table><tbody>\n";
	foreach my $prog ( <../bin/*> ) {
		if ( -B $prog ) {
			$count++;
			my $progname = basename($prog);
			$filename = $progname.".html";
			print $topfile "<tr><td><a href=\"", $filename, "\">", $progname, "</a></td>\n";
			$filename = $progdir.$filename;
			my $pfile = open_html_file($filename, $progname);
			print $pfile "<h2><i><font color=\"#000099\">Bsoft program</font></i></h2>\n";
			print $pfile "<center><h1><font color=\"#FF0000\">", $progname, "</font></h1></center>";
			my $state = 0;
			foreach my $line ( split("\n", `$prog -help 2>&1`) ) {
				if ( length($line) < 1 ) {
				} elsif ( $line =~ /-----/ ) {
				} elsif ( $line =~ /Bsoft version/ ) {
					if ( $state > 2 ) {
						print $pfile "</tbody></table>\n";
					}
					print $pfile "<br>$line<br>\n";
				} elsif ( $line =~ /^Usage/ ) {
					$state = 1;
					print $pfile "<h3>$line</h3>\n";
				} elsif ( $line =~ /^Actions/ || $line =~ /^Parameters/ || $line =~ /^Selections/ ||
						$line =~ /^Input/ || $line =~ /^Output/ || $line =~ /^Example/ ) {
					if ( $state > 2 ) {
						print $pfile "</tbody></table><br>\n";
					}
					$state++;
					print $pfile "<h3>$line</h3>\n<table><tbody>\n";
				} elsif ( $state > 2 ) {
					if ( $line =~ /^-/ ) {		# Options
						my $optn = substr $line, 0, 26;
						my @nopt = split /\s+/, $optn;
						if ( $#nopt > 1 ) {
							my @optline = split /\s+/, $line, 3;
							print $pfile "<tr><td>$optline[0] $optline[1]</td><td>$optline[2]</td></tr>\n";
						} else {
							my @optline = split /\s+/, $line, 2;
							print $pfile "<tr><td>$optline[0]</td><td>$optline[1]</td></tr>\n";
						}
					} else {
						print $pfile "<tr><td></td><td>$line</td></tr>\n";
					}
				} else {
					print $pfile "$line ";
					if ( $state == 1 ) {
						print $pfile "<br>\n";
						print $topfile "<td>$line</td></tr>\n";   # Program description line
						$state = 2;
					}
				}
			}
			close_html_file($pfile);
		}
	}
	print $topfile "</tbody></table><br>\n";
	close_html_file($topfile);
	
	print "Number of programs: $count\n\n";
}

sub open_html_file {
	my $filename = shift @_;
	my $title = shift @_;
	print "Writing ", $filename, "\n";
	local *FILE;
	open FILE,">".$filename or die;
	print FILE <<END;
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<html>
<head>
<meta name=\"Author\" content=\"Bernard Heymann\">
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<!-- Author: Bernard Heymann -->
<!-- Created: 20141222 -->
<!-- Modified: 20180924 -->
<title>Bsoft: $title </title>
<link href="../bsoft.css" rel="stylesheet" type="text/css" />
<link rel="icon" href="Bsoft_16x16.png" type="image/png" />
<link rel="icon" href="Bsoft_16x16.ico" type="image/x-icon" />
<link rel="shortcut icon" href="Bsoft_16x16.ico" type="image/x-icon" />
<script language="JavaScript" type="text/javascript" src="../bsoft.js"></script>
</head>

<body class="bsoft_layout">

<div id="content">

END
	return *FILE;
}

sub close_html_file {
	my $file = shift @_;
	my $thetime = localtime;
	my $prog = basename($0);
	print $file <<END;
</div>

<br/>

<div id="footer">
Generated by $prog on $thetime
</div>
</body>
</html>
END
	close $file;
}
