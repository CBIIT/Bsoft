.TH "/Users/bernard/b20/bsoft/src/bfft.cpp" 3 "Wed Sep 1 2021" "Version 2.1.0" "Bsoft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/bernard/b20/bsoft/src/bfft.cpp \- General FFT for n-dimensional data\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'rwimg\&.h'\fP
.br
\fC#include 'qsort_functions\&.h'\fP
.br
\fC#include 'options\&.h'\fP
.br
\fC#include 'timer\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBimg_fft_times\fP (int ndim, int minsize, int maxsize, int opt)"
.br
.RI "Tests the execution times for a series of image sizes\&. "
.ti -1c
.RI "int \fBmain\fP (int argc, char **argv)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBverbose\fP"
.br
.ti -1c
.RI "const char * \fBuse\fP []"
.br
.in -1c
.SH "Detailed Description"
.PP 
General FFT for n-dimensional data\&. 


.PP
\fBAuthor\fP
.RS 4
Bernard Heymann 
.RE
.PP
\fBDate\fP
.RS 4
Created: 19980805 
.PP
Modified: 20210817 Implementing the FFTW library 
.RE
.PP

.PP
Definition in file \fBbfft\&.cpp\fP\&.
.SH "Function Documentation"
.PP 
.SS "int img_fft_times (int ndim, int minsize, int maxsize, int opt)"

.PP
Tests the execution times for a series of image sizes\&. 
.PP
\fBParameters\fP
.RS 4
\fIndim\fP number of dimensions (1,2,3)\&. 
.br
\fIminsize\fP minimum image size\&. 
.br
\fImaxsize\fP maximum image size\&. 
.br
\fIopt\fP optimization (with FFTW_MEASURE)\&. 
.RE
.PP
\fBReturns\fP
.RS 4
int 0\&. 
.PP
.nf
FFTW library (www.fftw.org).
Blank complex floating point images are created and transformed.
Only the call to the complex FFT function is timed.

.fi
.PP
 
.RE
.PP

.PP
Definition at line 291 of file bfft\&.cpp\&.
.SS "int main (int argc, char ** argv)"

.PP
Definition at line 60 of file bfft\&.cpp\&.
.SH "Variable Documentation"
.PP 
.SS "const char* use[]"

.PP
Definition at line 22 of file bfft\&.cpp\&.
.SS "int verbose\fC [extern]\fP"

.SH "Author"
.PP 
Generated automatically by Doxygen for Bsoft from the source code\&.
