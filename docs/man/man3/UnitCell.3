.TH "UnitCell" 3 "Wed Sep 1 2021" "Version 2.1.0" "Bsoft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
UnitCell
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <UnitCell\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBUnitCell\fP ()"
.br
.ti -1c
.RI "\fBUnitCell\fP (double *v)"
.br
.ti -1c
.RI "\fBUnitCell\fP (double \fBa\fP, double \fBb\fP, double \fBc\fP, double alf, double bet, double gam)"
.br
.ti -1c
.RI "double & \fBoperator[]\fP (int i)"
.br
.ti -1c
.RI "bool \fBcheck\fP ()"
.br
.ti -1c
.RI "void \fBsize\fP (double \fBa\fP, double \fBb\fP, double \fBc\fP)"
.br
.ti -1c
.RI "void \fBa\fP (double d)"
.br
.ti -1c
.RI "void \fBb\fP (double d)"
.br
.ti -1c
.RI "void \fBc\fP (double d)"
.br
.ti -1c
.RI "void \fBalpha\fP (double d)"
.br
.ti -1c
.RI "void \fBbeta\fP (double d)"
.br
.ti -1c
.RI "void \fBgamma\fP (double d)"
.br
.ti -1c
.RI "double \fBa\fP ()"
.br
.ti -1c
.RI "double \fBb\fP ()"
.br
.ti -1c
.RI "double \fBc\fP ()"
.br
.ti -1c
.RI "double \fBalpha\fP ()"
.br
.ti -1c
.RI "double \fBbeta\fP ()"
.br
.ti -1c
.RI "double \fBgamma\fP ()"
.br
.ti -1c
.RI "void \fBset_angle_range\fP ()"
.br
.ti -1c
.RI "void \fBdegrees_to_radians\fP ()"
.br
.ti -1c
.RI "void \fBradians_to_degrees\fP ()"
.br
.ti -1c
.RI "double \fBvolume\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBskew_matrix\fP ()"
.br
.RI "Calculates the skew matrix from the unit cell parameters\&. "
.ti -1c
.RI "\fBMatrix3\fP \fBskew_rotation\fP (int invert)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 22 of file UnitCell\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "UnitCell::UnitCell ()\fC [inline]\fP"

.PP
Definition at line 26 of file UnitCell\&.h\&.
.SS "UnitCell::UnitCell (double * v)\fC [inline]\fP"

.PP
Definition at line 27 of file UnitCell\&.h\&.
.SS "UnitCell::UnitCell (double a, double b, double c, double alf, double bet, double gam)\fC [inline]\fP"

.PP
Definition at line 28 of file UnitCell\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "double UnitCell::a ()\fC [inline]\fP"

.PP
Definition at line 42 of file UnitCell\&.h\&.
.SS "void UnitCell::a (double d)\fC [inline]\fP"

.PP
Definition at line 36 of file UnitCell\&.h\&.
.SS "double UnitCell::alpha ()\fC [inline]\fP"

.PP
Definition at line 45 of file UnitCell\&.h\&.
.SS "void UnitCell::alpha (double d)\fC [inline]\fP"

.PP
Definition at line 39 of file UnitCell\&.h\&.
.SS "double UnitCell::b ()\fC [inline]\fP"

.PP
Definition at line 43 of file UnitCell\&.h\&.
.SS "void UnitCell::b (double d)\fC [inline]\fP"

.PP
Definition at line 37 of file UnitCell\&.h\&.
.SS "double UnitCell::beta ()\fC [inline]\fP"

.PP
Definition at line 46 of file UnitCell\&.h\&.
.SS "void UnitCell::beta (double d)\fC [inline]\fP"

.PP
Definition at line 40 of file UnitCell\&.h\&.
.SS "double UnitCell::c ()\fC [inline]\fP"

.PP
Definition at line 44 of file UnitCell\&.h\&.
.SS "void UnitCell::c (double d)\fC [inline]\fP"

.PP
Definition at line 38 of file UnitCell\&.h\&.
.SS "bool UnitCell::check ()\fC [inline]\fP"

.PP
Definition at line 34 of file UnitCell\&.h\&.
.SS "void UnitCell::degrees_to_radians ()\fC [inline]\fP"

.PP
Definition at line 54 of file UnitCell\&.h\&.
.SS "double UnitCell::gamma ()\fC [inline]\fP"

.PP
Definition at line 47 of file UnitCell\&.h\&.
.SS "void UnitCell::gamma (double d)\fC [inline]\fP"

.PP
Definition at line 41 of file UnitCell\&.h\&.
.SS "double& UnitCell::operator[] (int i)\fC [inline]\fP"

.PP
Definition at line 33 of file UnitCell\&.h\&.
.SS "void UnitCell::radians_to_degrees ()\fC [inline]\fP"

.PP
Definition at line 55 of file UnitCell\&.h\&.
.SS "void UnitCell::set_angle_range ()\fC [inline]\fP"

.PP
Definition at line 48 of file UnitCell\&.h\&.
.SS "void UnitCell::size (double a, double b, double c)\fC [inline]\fP"

.PP
Definition at line 35 of file UnitCell\&.h\&.
.SS "\fBMatrix3\fP UnitCell::skew_matrix ()"

.PP
Calculates the skew matrix from the unit cell parameters\&. 
.PP
\fBReturns\fP
.RS 4
\fBMatrix3\fP the 3x3 skew matrix\&. 
.PP
.nf
Derived from the X-plor source rotate.s.
New coordinates are obtained by r'(i)=sum_j matrix(i,j)*r(j)
The convention to setup the matrices is as follows:
    a lies on the x-axis, 
    b lies in the x,y plane. 

.fi
.PP
 
.RE
.PP

.PP
Definition at line 26 of file UnitCell\&.cpp\&.
.SS "\fBMatrix3\fP UnitCell::skew_rotation (int invert)"

.PP
Definition at line 65 of file UnitCell\&.cpp\&.
.SS "double UnitCell::volume ()\fC [inline]\fP"

.PP
Definition at line 56 of file UnitCell\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bsoft from the source code\&.
