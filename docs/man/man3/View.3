.TH "View" 3 "Wed Sep 1 2021" "Version 2.1.0" "Bsoft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
View
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <View\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBView\fP ()"
.br
.ti -1c
.RI "\fBView\fP (const \fBView\fP &view)"
.br
.ti -1c
.RI "template<typename T > \fBView\fP (\fBVector3\fP< T > &vec)"
.br
.ti -1c
.RI "\fBView\fP (vector< double > &vec)"
.br
.ti -1c
.RI "\fBView\fP (const double \fBx\fP, const double \fBy\fP, const double \fBz\fP, const double \fBangle\fP)"
.br
.ti -1c
.RI "\fBView\fP (\fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBView\fP (\fBMatrix3\fP m)"
.br
.ti -1c
.RI "\fBView\fP (double tilt, double axis)"
.br
.ti -1c
.RI "\fBView\fP (double \fBangle\fP, \fBVector3\fP< double > axis)"
.br
.ti -1c
.RI "\fBView\fP \fBoperator=\fP (const \fBView\fP &view)"
.br
.ti -1c
.RI "\fBView\fP \fBoperator=\fP (const vector< double > &vec)"
.br
.ti -1c
.RI "\fBView\fP \fBoperator\-\fP ()"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBView\fP &view)"
.br
.ti -1c
.RI "double & \fBoperator[]\fP (size_t i)"
.br
.ti -1c
.RI "double \fBx\fP ()"
.br
.ti -1c
.RI "double \fBy\fP ()"
.br
.ti -1c
.RI "double \fBz\fP ()"
.br
.ti -1c
.RI "double \fBangle\fP ()"
.br
.ti -1c
.RI "void \fBx\fP (const double d)"
.br
.ti -1c
.RI "void \fBy\fP (const double d)"
.br
.ti -1c
.RI "void \fBz\fP (const double d)"
.br
.ti -1c
.RI "void \fBangle\fP (const double d)"
.br
.ti -1c
.RI "vector< double > \fBarray\fP ()"
.br
.ti -1c
.RI "double \fBvector_size\fP ()"
.br
.ti -1c
.RI "double \fBnormalize\fP ()"
.br
.ti -1c
.RI "void \fBnegate\fP ()"
.br
.ti -1c
.RI "\fBView\fP \fBbackward\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP< double > \fBvector3\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBquaternion\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBmatrix\fP ()"
.br
.ti -1c
.RI "double \fBdistance\fP (const \fBView\fP &view)"
.br
.ti -1c
.RI "double \fBangle\fP (const \fBView\fP &view)"
.br
.ti -1c
.RI "double \fBresidual\fP (const \fBView\fP &view)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBView\fP * \fBnext\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 26 of file View\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "View::View ()\fC [inline]\fP"

.PP
Definition at line 38 of file View\&.h\&.
.SS "View::View (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 39 of file View\&.h\&.
.SS "template<typename T > View::View (\fBVector3\fP< T > & vec)\fC [inline]\fP"

.PP
Definition at line 41 of file View\&.h\&.
.SS "View::View (vector< double > & vec)\fC [inline]\fP"

.PP
Definition at line 43 of file View\&.h\&.
.SS "View::View (const double x, const double y, const double z, const double angle)\fC [inline]\fP"

.PP
Definition at line 47 of file View\&.h\&.
.SS "View::View (\fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 52 of file View\&.h\&.
.SS "View::View (\fBMatrix3\fP m)\fC [inline]\fP"

.PP
Definition at line 64 of file View\&.h\&.
.SS "View::View (double tilt, double axis)\fC [inline]\fP"

.PP
Definition at line 68 of file View\&.h\&.
.SS "View::View (double angle, \fBVector3\fP< double > axis)\fC [inline]\fP"

.PP
Definition at line 73 of file View\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "double View::angle ()\fC [inline]\fP"

.PP
Definition at line 99 of file View\&.h\&.
.SS "void View::angle (const double d)\fC [inline]\fP"

.PP
Definition at line 103 of file View\&.h\&.
.SS "double View::angle (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 163 of file View\&.h\&.
.SS "vector<double> View::array ()\fC [inline]\fP"

.PP
Definition at line 104 of file View\&.h\&.
.SS "\fBView\fP View::backward ()\fC [inline]\fP"

.PP
Definition at line 119 of file View\&.h\&.
.SS "double View::distance (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 159 of file View\&.h\&.
.SS "\fBMatrix3\fP View::matrix ()\fC [inline]\fP"

.PP
Definition at line 154 of file View\&.h\&.
.SS "void View::negate ()\fC [inline]\fP"

.PP
Definition at line 118 of file View\&.h\&.
.SS "double View::normalize ()\fC [inline]\fP"

.PP
Definition at line 110 of file View\&.h\&.
.SS "\fBView\fP View::operator\- ()\fC [inline]\fP"

.PP
Definition at line 88 of file View\&.h\&.
.SS "\fBView\fP View::operator= (const vector< double > & vec)\fC [inline]\fP"

.PP
Definition at line 82 of file View\&.h\&.
.SS "\fBView\fP View::operator= (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 78 of file View\&.h\&.
.SS "bool View::operator== (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 92 of file View\&.h\&.
.SS "double& View::operator[] (size_t i)\fC [inline]\fP"

.PP
Definition at line 95 of file View\&.h\&.
.SS "\fBQuaternion\fP View::quaternion ()\fC [inline]\fP"

.PP
Definition at line 131 of file View\&.h\&.
.SS "double View::residual (const \fBView\fP & view)\fC [inline]\fP"

.PP
Definition at line 169 of file View\&.h\&.
.SS "\fBVector3\fP<double> View::vector3 ()\fC [inline]\fP"

.PP
Definition at line 130 of file View\&.h\&.
.SS "double View::vector_size ()\fC [inline]\fP"

.PP
Definition at line 107 of file View\&.h\&.
.SS "double View::x ()\fC [inline]\fP"

.PP
Definition at line 96 of file View\&.h\&.
.SS "void View::x (const double d)\fC [inline]\fP"

.PP
Definition at line 100 of file View\&.h\&.
.SS "double View::y ()\fC [inline]\fP"

.PP
Definition at line 97 of file View\&.h\&.
.SS "void View::y (const double d)\fC [inline]\fP"

.PP
Definition at line 101 of file View\&.h\&.
.SS "double View::z ()\fC [inline]\fP"

.PP
Definition at line 98 of file View\&.h\&.
.SS "void View::z (const double d)\fC [inline]\fP"

.PP
Definition at line 102 of file View\&.h\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBView\fP* View::next"

.PP
Definition at line 28 of file View\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bsoft from the source code\&.
