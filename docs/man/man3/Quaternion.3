.TH "Quaternion" 3 "Wed Sep 1 2021" "Version 2.1.0" "Bsoft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Quaternion
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Quaternion\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQuaternion\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP (const double \fBscalar\fP)"
.br
.ti -1c
.RI "\fBQuaternion\fP (const double \fBscalar\fP, const double x, const double y, const double z)"
.br
.ti -1c
.RI "\fBQuaternion\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "template<typename Type > \fBQuaternion\fP (const \fBVector3\fP< Type > &vector)"
.br
.ti -1c
.RI "template<typename Type > \fBQuaternion\fP (const double \fBscalar\fP, const \fBVector3\fP< Type > &vector)"
.br
.ti -1c
.RI "template<typename Type > \fBQuaternion\fP (\fBVector3\fP< Type > &\fBaxis\fP, double \fBangle\fP)"
.br
.ti -1c
.RI "template<typename Type1 , typename Type2 > \fBQuaternion\fP (\fBVector3\fP< Type1 > &from_vec, \fBVector3\fP< Type2 > &to_vec)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator=\fP (const \fBQuaternion\fP q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator\-\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator+=\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator+\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator\-=\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator\-\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator*=\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator*\fP (const \fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator/=\fP (const double d)"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBoperator/\fP (const double d)"
.br
.ti -1c
.RI "double & \fBoperator[]\fP (long i)"
.br
.ti -1c
.RI "double \fBscalar\fP ()"
.br
.ti -1c
.RI "double \fBangle\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP< double > \fBaxis\fP ()"
.br
.ti -1c
.RI "double \fBnorm\fP ()"
.br
.ti -1c
.RI "double \fBnorm2\fP ()"
.br
.ti -1c
.RI "double \fBnormalize\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBconj\fP ()"
.br
.ti -1c
.RI "double \fBinvert\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBinverse\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBrotate\fP (const \fBQuaternion\fP &point)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 25 of file Quaternion\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Quaternion::Quaternion ()\fC [inline]\fP"

.PP
Definition at line 43 of file Quaternion\&.h\&.
.SS "Quaternion::Quaternion (const double scalar)\fC [inline]\fP"

.PP
Definition at line 44 of file Quaternion\&.h\&.
.SS "Quaternion::Quaternion (const double scalar, const double x, const double y, const double z)\fC [inline]\fP"

.PP
Definition at line 47 of file Quaternion\&.h\&.
.SS "Quaternion::Quaternion (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 51 of file Quaternion\&.h\&.
.SS "template<typename Type > Quaternion::Quaternion (const \fBVector3\fP< Type > & vector)\fC [inline]\fP"

.PP
Definition at line 55 of file Quaternion\&.h\&.
.SS "template<typename Type > Quaternion::Quaternion (const double scalar, const \fBVector3\fP< Type > & vector)\fC [inline]\fP"

.PP
Definition at line 61 of file Quaternion\&.h\&.
.SS "template<typename Type > Quaternion::Quaternion (\fBVector3\fP< Type > & axis, double angle)\fC [inline]\fP"

.PP
Definition at line 67 of file Quaternion\&.h\&.
.SS "template<typename Type1 , typename Type2 > Quaternion::Quaternion (\fBVector3\fP< Type1 > & from_vec, \fBVector3\fP< Type2 > & to_vec)\fC [inline]\fP"

.PP
Definition at line 71 of file Quaternion\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "double Quaternion::angle ()\fC [inline]\fP"

.PP
Definition at line 143 of file Quaternion\&.h\&.
.SS "\fBVector3\fP<double> Quaternion::axis ()\fC [inline]\fP"

.PP
Definition at line 144 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::conj ()\fC [inline]\fP"

.PP
Definition at line 160 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::inverse ()\fC [inline]\fP"

.PP
Definition at line 168 of file Quaternion\&.h\&.
.SS "double Quaternion::invert ()\fC [inline]\fP"

.PP
Definition at line 161 of file Quaternion\&.h\&.
.SS "double Quaternion::norm ()\fC [inline]\fP"

.PP
Definition at line 149 of file Quaternion\&.h\&.
.SS "double Quaternion::norm2 ()\fC [inline]\fP"

.PP
Definition at line 150 of file Quaternion\&.h\&.
.SS "double Quaternion::normalize ()\fC [inline]\fP"

.PP
Definition at line 151 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator* (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 117 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator*= (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 113 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator+ (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 101 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator+= (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 97 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator\- ()\fC [inline]\fP"

.PP
Definition at line 93 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator\- (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 109 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator\-= (const \fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 105 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator/ (const double d)\fC [inline]\fP"

.PP
Definition at line 132 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator/= (const double d)\fC [inline]\fP"

.PP
Definition at line 125 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::operator= (const \fBQuaternion\fP q)\fC [inline]\fP"

.PP
Definition at line 89 of file Quaternion\&.h\&.
.SS "double& Quaternion::operator[] (long i)\fC [inline]\fP"

.PP
Definition at line 137 of file Quaternion\&.h\&.
.SS "\fBQuaternion\fP Quaternion::rotate (const \fBQuaternion\fP & point)\fC [inline]\fP"

.PP
Definition at line 173 of file Quaternion\&.h\&.
.SS "double Quaternion::scalar ()\fC [inline]\fP"

.PP
Definition at line 142 of file Quaternion\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bsoft from the source code\&.
