<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_unit_cell" xml:lang="en-US">
<title>UnitCell Class Reference</title>
<indexterm><primary>UnitCell</primary></indexterm>
<para>
<computeroutput>#include &lt;UnitCell.h&gt;</computeroutput>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_unit_cell_1a7217ff77357c0a8529c3066efc97d23b">UnitCell</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_unit_cell_1ad047f6ff2b43caaeb7c71b56b2b0b2b4">UnitCell</link> (double *v)</para>
</listitem>
            <listitem><para><link linkend="_class_unit_cell_1a623fe291b1f3841af031d7b33575b986">UnitCell</link> (double <link linkend="_class_unit_cell_1a622137ff1925eff7a1f15575e0c63011">a</link>, double <link linkend="_class_unit_cell_1aac72a618a8091bdf3a08ad77f5b977d2">b</link>, double <link linkend="_class_unit_cell_1a89f4406a1f11f643bd2ad7b29c8c3835">c</link>, double alf, double bet, double gam)</para>
</listitem>
            <listitem><para>double &amp; <link linkend="_class_unit_cell_1a4544ee8f773d20ae516c0f1e1008f31b">operator[]</link> (int i)</para>
</listitem>
            <listitem><para>bool <link linkend="_class_unit_cell_1aead7265d838e179515316c44a873139d">check</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a40224b13002c56fb8ec40a14c3176e3e">size</link> (double <link linkend="_class_unit_cell_1a622137ff1925eff7a1f15575e0c63011">a</link>, double <link linkend="_class_unit_cell_1aac72a618a8091bdf3a08ad77f5b977d2">b</link>, double <link linkend="_class_unit_cell_1a89f4406a1f11f643bd2ad7b29c8c3835">c</link>)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a622137ff1925eff7a1f15575e0c63011">a</link> (double d)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1aac72a618a8091bdf3a08ad77f5b977d2">b</link> (double d)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a89f4406a1f11f643bd2ad7b29c8c3835">c</link> (double d)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1afd48aeade969b9b8d398e4d502cb9ba8">alpha</link> (double d)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a4175dceb9c6904f814b93612ccdddef4">beta</link> (double d)</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a3e5876d61ea048451d0f679f341b04c4">gamma</link> (double d)</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a7b7389247d198508292a96b822cf5a9e">a</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a2ef525568056a5ef0d8b6e531de7989d">b</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1aa02be40e227ab580d57c65e54f6abb6f">c</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a354ced8b6db0d28a90558d8752078abe">alpha</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a8479b379080963969a986ad354240a5c">beta</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a86888d5e3cd289f173ad00086e4e9741">gamma</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1adf8c0908f6b207c9e584a3420d08071b">set_angle_range</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a5141aa0d4c86494329260e0cf184932d">degrees_to_radians</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_unit_cell_1a58539a8e394693941c4fd0ec98f85508">radians_to_degrees</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_unit_cell_1a703773d1a9e6985bf963c6465d2e4efc">volume</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_matrix3">Matrix3</link> <link linkend="_class_unit_cell_1aabda30bdf4a5afd5e4a0d5035fd0bbb3">skew_matrix</link> ()</para>

<para>Calculates the skew matrix from the unit cell parameters. </para>
</listitem>
            <listitem><para><link linkend="_class_matrix3">Matrix3</link> <link linkend="_class_unit_cell_1ad0dba6e12ebb4c83030b9bb3d016316f">skew_rotation</link> (int invert)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line 22 of file UnitCell.h.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_unit_cell_1a7217ff77357c0a8529c3066efc97d23b"/>    <section>
    <title>UnitCell()<computeroutput>[1/3]</computeroutput></title>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<para><computeroutput>UnitCell::UnitCell ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 26 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1ad047f6ff2b43caaeb7c71b56b2b0b2b4"/>    <section>
    <title>UnitCell()<computeroutput>[2/3]</computeroutput></title>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<para><computeroutput>UnitCell::UnitCell (double * v)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 27 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a623fe291b1f3841af031d7b33575b986"/>    <section>
    <title>UnitCell()<computeroutput>[3/3]</computeroutput></title>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>UnitCell</secondary></indexterm>
<para><computeroutput>UnitCell::UnitCell (double a, double b, double c, double alf, double bet, double gam)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 28 of file UnitCell.h.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_unit_cell_1a7b7389247d198508292a96b822cf5a9e"/>    <section>
    <title>a()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>a</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>a</secondary></indexterm>
<para><computeroutput>double UnitCell::a ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 42 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a622137ff1925eff7a1f15575e0c63011"/>    <section>
    <title>a()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>a</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>a</secondary></indexterm>
<para><computeroutput>void UnitCell::a (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 36 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a354ced8b6db0d28a90558d8752078abe"/>    <section>
    <title>alpha()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>alpha</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>alpha</secondary></indexterm>
<para><computeroutput>double UnitCell::alpha ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 45 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1afd48aeade969b9b8d398e4d502cb9ba8"/>    <section>
    <title>alpha()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>alpha</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>alpha</secondary></indexterm>
<para><computeroutput>void UnitCell::alpha (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 39 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a2ef525568056a5ef0d8b6e531de7989d"/>    <section>
    <title>b()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>b</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>b</secondary></indexterm>
<para><computeroutput>double UnitCell::b ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 43 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1aac72a618a8091bdf3a08ad77f5b977d2"/>    <section>
    <title>b()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>b</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>b</secondary></indexterm>
<para><computeroutput>void UnitCell::b (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 37 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a8479b379080963969a986ad354240a5c"/>    <section>
    <title>beta()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>beta</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>beta</secondary></indexterm>
<para><computeroutput>double UnitCell::beta ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 46 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a4175dceb9c6904f814b93612ccdddef4"/>    <section>
    <title>beta()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>beta</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>beta</secondary></indexterm>
<para><computeroutput>void UnitCell::beta (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 40 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1aa02be40e227ab580d57c65e54f6abb6f"/>    <section>
    <title>c()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>c</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>c</secondary></indexterm>
<para><computeroutput>double UnitCell::c ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 44 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a89f4406a1f11f643bd2ad7b29c8c3835"/>    <section>
    <title>c()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>c</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>c</secondary></indexterm>
<para><computeroutput>void UnitCell::c (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 38 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1aead7265d838e179515316c44a873139d"/>    <section>
    <title>check()</title>
<indexterm><primary>check</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>check</secondary></indexterm>
<para><computeroutput>bool UnitCell::check ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 34 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a5141aa0d4c86494329260e0cf184932d"/>    <section>
    <title>degrees_to_radians()</title>
<indexterm><primary>degrees_to_radians</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>degrees_to_radians</secondary></indexterm>
<para><computeroutput>void UnitCell::degrees_to_radians ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 54 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a86888d5e3cd289f173ad00086e4e9741"/>    <section>
    <title>gamma()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>gamma</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>gamma</secondary></indexterm>
<para><computeroutput>double UnitCell::gamma ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 47 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a3e5876d61ea048451d0f679f341b04c4"/>    <section>
    <title>gamma()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>gamma</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>gamma</secondary></indexterm>
<para><computeroutput>void UnitCell::gamma (double d)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 41 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a4544ee8f773d20ae516c0f1e1008f31b"/>    <section>
    <title>operator[]()</title>
<indexterm><primary>operator[]</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>operator[]</secondary></indexterm>
<para><computeroutput>double&amp; UnitCell::operator[] (int i)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 33 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a58539a8e394693941c4fd0ec98f85508"/>    <section>
    <title>radians_to_degrees()</title>
<indexterm><primary>radians_to_degrees</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>radians_to_degrees</secondary></indexterm>
<para><computeroutput>void UnitCell::radians_to_degrees ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 55 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1adf8c0908f6b207c9e584a3420d08071b"/>    <section>
    <title>set_angle_range()</title>
<indexterm><primary>set_angle_range</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>set_angle_range</secondary></indexterm>
<para><computeroutput>void UnitCell::set_angle_range ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 48 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1a40224b13002c56fb8ec40a14c3176e3e"/>    <section>
    <title>size()</title>
<indexterm><primary>size</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>size</secondary></indexterm>
<para><computeroutput>void UnitCell::size (double a, double b, double c)<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 35 of file UnitCell.h.</para>
    </section><anchor xml:id="_class_unit_cell_1aabda30bdf4a5afd5e4a0d5035fd0bbb3"/>    <section>
    <title>skew_matrix()</title>
<indexterm><primary>skew_matrix</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>skew_matrix</secondary></indexterm>
<para><computeroutput><link linkend="_class_matrix3">Matrix3</link> UnitCell::skew_matrix ( )</computeroutput></para><para>

<para>Calculates the skew matrix from the unit cell parameters. </para>
</para>

<para><formalpara><title>Returns</title>

<para><link linkend="_class_matrix3">Matrix3</link> the 3x3 skew matrix. <literallayout><computeroutput>Derived from the X-plor source rotate.s.
New coordinates are obtained by r&apos;(i)=sum_j matrix(i,j)*r(j)
The convention to setup the matrices is as follows:
    a lies on the x-axis, 
    b lies in the x,y plane. 
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 26 of file UnitCell.cpp.</para>
    </section><anchor xml:id="_class_unit_cell_1ad0dba6e12ebb4c83030b9bb3d016316f"/>    <section>
    <title>skew_rotation()</title>
<indexterm><primary>skew_rotation</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>skew_rotation</secondary></indexterm>
<para><computeroutput><link linkend="_class_matrix3">Matrix3</link> UnitCell::skew_rotation (int invert)</computeroutput></para><para>
Definition at line 65 of file UnitCell.cpp.</para>
    </section><anchor xml:id="_class_unit_cell_1a703773d1a9e6985bf963c6465d2e4efc"/>    <section>
    <title>volume()</title>
<indexterm><primary>volume</primary><secondary>UnitCell</secondary></indexterm>
<indexterm><primary>UnitCell</primary><secondary>volume</secondary></indexterm>
<para><computeroutput>double UnitCell::volume ( )<computeroutput>[inline]</computeroutput></computeroutput></para><para>
Definition at line 56 of file UnitCell.h.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/bernard/b20/bsoft/include/<link linkend="__unit_cell_8h">UnitCell.h</link>/Users/bernard/b20/bsoft/src/util/<link linkend="__unit_cell_8cpp">UnitCell.cpp</link></section>
</section>
