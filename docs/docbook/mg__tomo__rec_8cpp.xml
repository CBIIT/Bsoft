<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mg__tomo__rec_8cpp" xml:lang="en-US">
<title>/Users/bernard/b20/bsoft/src/mg/mg_tomo_rec.cpp File Reference</title>
<indexterm><primary>/Users/bernard/b20/bsoft/src/mg/mg_tomo_rec.cpp</primary></indexterm>
<para>

<para>Functions to do a tomographic reconstruction. </para>
 
</para>
<programlisting>#include &quot;mg_tomo_rec.h&quot;
#include &quot;mg_reconstruct.h&quot;
#include &quot;mg_tomography.h&quot;
#include &quot;mg_select.h&quot;
#include &quot;mg_ctf.h&quot;
#include &quot;Complex.h&quot;
#include &quot;linked_list.h&quot;
#include &quot;utilities.h&quot;
#include &quot;timer.h&quot;
#include &lt;fstream&gt;
#include &lt;sys/stat.h&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1a6e0be2a33924440984c9038fb4d2c84a">img_backtransform_z_lines</link> (fstream *ftemp, <link linkend="_class_bimage">Bimage</link> *p)</para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1aab732409522b4e8ff7bcb71b743a54a2">img_write_data_block_with_type</link> (fstream *ftemp, <link linkend="_class_bimage">Bimage</link> *p, double avg, double std, double cutmin, double cutmax)</para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1ad8618b6fbbfd8dbdb2799a6dc1120b0a">mg_tomo_rec_prepare</link> (<link linkend="_class_bmicrograph">Bmicrograph</link> *mg, int ft_size, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; rec_size, double edge_width, double marker_radius, int fill_type, double fill, int action, double wiener, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; tile_size, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan)</para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1ad278516c74499cc3a2e571c3ceac1a43">project_tomo_reconstruct</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, double hi_res, double scale, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, int interp_type, int pad_factor, double edge_width, double marker_radius, int fill_type, double fill, int action, double wiener)</para>

<para>Reciprocal space reconstruction from the images in a multi-image file. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1a56126ce6933914a8c06bae3704800d17">project_fourier_reconstruction_slab</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, double hi_res, double scale, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, int slab_start, int slab_end, double marker_radius, int fill_type, double fill, int action, double wiener)</para>

<para>Reciprocal space reconstruction from the images in a multi-image file. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>long <link linkend="_mg__tomo__rec_8cpp_1ae1c4304e685f8fc4c244529a65f67f60">particle_tomo_reconstruct</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, <link linkend="_class_bparticle">Bparticle</link> *recpart, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; recsize, double resolution, int interp_type, long ft_size, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; scale, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> planp, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> planr, int ctf_action, double wiener, <link linkend="_struct_bsymmetry">Bsymmetry</link> &amp;sym, <link linkend="_class_bstring">Bstring</link> &amp;partbase, <link linkend="_class_bstring">Bstring</link> &amp;partpath, <link linkend="_class_bstring">Bstring</link> &amp;partext)</para>

<para>Reconstructs individual particles from a tilt series. </para>
</listitem>
            <listitem><para>long <link linkend="_mg__tomo__rec_8cpp_1a253c6d7a5b22c9dd1272768514d694dc">project_tomo_reconstruct_particles</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, double resolution, int interp_type, int pad_factor, int ctf_action, double wiener, <link linkend="_struct_bsymmetry">Bsymmetry</link> &amp;sym, <link linkend="_class_bstring">Bstring</link> &amp;partbase, <link linkend="_class_bstring">Bstring</link> &amp;partpath, <link linkend="_class_bstring">Bstring</link> &amp;partext)</para>

<para>Reconstructs particles from a tilt series. </para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1ad7223caf92e4a93f5a205da6d0382f96">img_backtransform_slices</link> (<link linkend="_class_bimage">Bimage</link> *p)</para>

<para>Backtransforms 2D slices in a 3D volume. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>long <link linkend="_mg__tomo__rec_8cpp_1a1142db4f55925935dd3c264f85cfb250">img_pack_2D_in_recip_space_slab</link> (<link linkend="_class_bimage">Bimage</link> *p, <link linkend="_class_bimage">Bimage</link> *prec, long zsize, long slab_start, float *weight, float *weight2, double hi_res, <link linkend="_class_matrix3">Matrix3</link> mat, double scale)</para>

<para>Packs a 2D Fourier transform into a 3D reciprocal space volume. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1aa976d053c150f485c17ce8f3c7f69535">img_phase_shift_slab_to_origin</link> (<link linkend="_class_bimage">Bimage</link> *p, int zsize, int slab_start)</para>

<para>Phase shifts a set of reflections to the image origin. </para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1addce77847a1997c354f5f489d1dd8fef">mg_fft_write</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, <link linkend="_class_vector3">Vector3</link>&lt; int &gt; size, double scale, int pad_factor, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype, double marker_radius, int fill_type, double fill)</para>

<para>Fourier transform micrographs and write to disk. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1a30366f649d6aa26b48c160cb6de91041">img_extract_ytile</link> (<link linkend="_class_bstring">Bstring</link> *<link linkend="_file__util_8cpp_1a3c3411ced4b9632566ecc66ffa64a72a">file_list</link>, int ystart, int ysize)</para>

<para>Extracts a tile from the image with limits in y. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1afb9ec69619552c39c734e2442136e577">img_backtransform_z_on_disk</link> (<link linkend="_class_bstring">Bstring</link> *<link linkend="_file__util_8cpp_1a3c3411ced4b9632566ecc66ffa64a72a">file_list</link>, <link linkend="_class_bstring">Bstring</link> &amp;recfile, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype, double avg, double std, double cutmin, double cutmax)</para>

<para>The lines along the z-dimensions of a disk-based block is Fourier back-transformed. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1aee689abb683ac7efbd2cbd96d82ea3ec">img_backtransform_one_y_plane</link> (<link linkend="_class_bimage">Bimage</link> *p, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan, int y)</para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1a5aaf1c9d4ea7afd06937fb5c083da1a0">img_backtransform_one_y_plane</link> (fstream *ftemp, <link linkend="_class_bimage">Bimage</link> *p, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan, int y, <link linkend="_class_complex">Complex</link>&lt; float &gt; *zline, <link linkend="_class_complex">Complex</link>&lt; float &gt; *cfdata)</para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1a041526572728d553dd3c80a3d2ef387b">img_backtransform_z_lines</link> (<link linkend="_class_bimage">Bimage</link> *p)</para>

<para>The lines along the z-dimensions of a disk-based block is Fourier back-transformed. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
            <listitem><para>long <link linkend="_mg__tomo__rec_8cpp_1acfff88622e660019a1b041afb0eeab68">gettypesize</link> (<link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> type)</para>

<para>Get the size of a datatype. </para>
</listitem>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1ac6bc4b1bd8f695fb4a6c8f86fbc1f6b7">set_value_with_datatype</link> (char *ptr, double value, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype)</para>

<para>Set a pointer to a value with a given data type. </para>
</listitem>
            <listitem><para><link linkend="_class_bimage">Bimage</link> * <link linkend="_mg__tomo__rec_8cpp_1a4c8a5148f0492456835a080a8375eaee">project_missing_mask</link> (<link linkend="_class_bproject">Bproject</link> *<link linkend="_tcltk__bmodel_8cpp_1aea438e09dfc03683a0f49a05e9a69cac">project</link>, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; origin, double hi_res, double scale)</para>

<para>Creates a reciprocal space mask from the tilt series orientations. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_mg__tomo__rec_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453">verbose</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Functions to do a tomographic reconstruction. </para>

<para><formalpara><title>Author</title>

<para>Bernard Heymann </para>
</formalpara>
<formalpara><title>Date</title>

<para>Created: 20020416 </para>

<para>Modified: 20181221 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_mg__tomo__rec_8cpp_1acfff88622e660019a1b041afb0eeab68"/>    <section>
    <title>gettypesize()</title>
<indexterm><primary>gettypesize</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>gettypesize</secondary></indexterm>
<para><computeroutput>long gettypesize (<link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> type)</computeroutput></para><para>

<para>Get the size of a datatype. </para>
</para>

<para><literallayout><computeroutput>This function is used for calculating image data sizes for allocating
memory and reading the data.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>type</entry>
                                <entry>
<para>data type (defined in <link linkend="_rwimg_8h">rwimg.h</link>). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>long size of data type, if &lt; 0 the data type is not supported. </para>
</formalpara>
</para>
<para>
Definition at line 1395 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1aee689abb683ac7efbd2cbd96d82ea3ec"/>    <section>
    <title>img_backtransform_one_y_plane()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>img_backtransform_one_y_plane</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_one_y_plane</secondary></indexterm>
<para><computeroutput>int img_backtransform_one_y_plane (<link linkend="_class_bimage">Bimage</link> * p, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan, int y)</computeroutput></para><para>
Definition at line 1251 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a5aaf1c9d4ea7afd06937fb5c083da1a0"/>    <section>
    <title>img_backtransform_one_y_plane()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>img_backtransform_one_y_plane</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_one_y_plane</secondary></indexterm>
<para><computeroutput>int img_backtransform_one_y_plane (fstream * ftemp, <link linkend="_class_bimage">Bimage</link> * p, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan, int y, <link linkend="_class_complex">Complex</link>&lt; float &gt; * zline, <link linkend="_class_complex">Complex</link>&lt; float &gt; * cfdata)</computeroutput></para><para>
Definition at line 1271 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1ad7223caf92e4a93f5a205da6d0382f96"/>    <section>
    <title>img_backtransform_slices()</title>
<indexterm><primary>img_backtransform_slices</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_slices</secondary></indexterm>
<para><computeroutput>int img_backtransform_slices (<link linkend="_class_bimage">Bimage</link> * p)</computeroutput></para><para>

<para>Backtransforms 2D slices in a 3D volume. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>3D complex volume. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int 0. <literallayout><computeroutput>Each slice is extracted, backtransformed and copied back into the
original volume.
Note: The phases are now not hermitian any more.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 764 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a041526572728d553dd3c80a3d2ef387b"/>    <section>
    <title>img_backtransform_z_lines()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>img_backtransform_z_lines</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_z_lines</secondary></indexterm>
<para><computeroutput>int img_backtransform_z_lines (<link linkend="_class_bimage">Bimage</link> * p)</computeroutput></para><para>

<para>The lines along the z-dimensions of a disk-based block is Fourier back-transformed. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>image header information (statistics updated). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int 0. <literallayout><computeroutput>Each 2D xz plane is read from the raw complex data block.
Each z-line in the plane is back-transformed.
The transformed 2D plane is written back into the raw data block.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 1322 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a6e0be2a33924440984c9038fb4d2c84a"/>    <section>
    <title>img_backtransform_z_lines()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>img_backtransform_z_lines</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_z_lines</secondary></indexterm>
<para><computeroutput>int img_backtransform_z_lines (fstream * ftemp, <link linkend="_class_bimage">Bimage</link> * p)</computeroutput></para><para>
Definition at line 1350 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1afb9ec69619552c39c734e2442136e577"/>    <section>
    <title>img_backtransform_z_on_disk()</title>
<indexterm><primary>img_backtransform_z_on_disk</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_backtransform_z_on_disk</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* img_backtransform_z_on_disk (<link linkend="_class_bstring">Bstring</link> * file_list, <link linkend="_class_bstring">Bstring</link> &amp; recfile, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype, double avg, double std, double cutmin, double cutmax)</computeroutput></para><para>

<para>The lines along the z-dimensions of a disk-based block is Fourier back-transformed. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*file_list</entry>
                                <entry>
<para>list of image file names. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;recfile</entry>
                                <entry>
<para>new reconstruction file name. </para>
</entry>
                            </row>
                            <row>
                                <entry>datatype</entry>
                                <entry>
<para>data type for new reconstruction file. </para>
</entry>
                            </row>
                            <row>
                                <entry>avg</entry>
                                <entry>
<para>target average. </para>
</entry>
                            </row>
                            <row>
                                <entry>std</entry>
                                <entry>
<para>target standard deviation. </para>
</entry>
                            </row>
                            <row>
                                <entry>cutmin</entry>
                                <entry>
<para>minimum for truncation. </para>
</entry>
                            </row>
                            <row>
                                <entry>cutmax</entry>
                                <entry>
<para>maximum for truncation. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int 0. <literallayout><computeroutput>Each 2D xz plane is read from the raw complex data block.
Each z-line in the plane is back-transformed.
The transformed 2D plane is written back into the raw data block.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 1173 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a30366f649d6aa26b48c160cb6de91041"/>    <section>
    <title>img_extract_ytile()</title>
<indexterm><primary>img_extract_ytile</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_extract_ytile</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* img_extract_ytile (<link linkend="_class_bstring">Bstring</link> * file_list, int ystart, int ysize)</computeroutput></para><para>

<para>Extracts a tile from the image with limits in y. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*file_list</entry>
                                <entry>
<para>list of image file names. </para>
</entry>
                            </row>
                            <row>
                                <entry>ystart</entry>
                                <entry>
<para>first y index. </para>
</entry>
                            </row>
                            <row>
                                <entry>ysize</entry>
                                <entry>
<para>size in y. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Bimage* tile, NULL on failure. <literallayout><computeroutput>From a series of z-slab images, tiles are extracted from a defined start in y,
and with a defined size in y.
A file indicating the origins of the tiles, &quot;y.tiles&quot;, is written to
be used with bpatch to assemble the tiles.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 1072 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a1142db4f55925935dd3c264f85cfb250"/>    <section>
    <title>img_pack_2D_in_recip_space_slab()</title>
<indexterm><primary>img_pack_2D_in_recip_space_slab</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_pack_2D_in_recip_space_slab</secondary></indexterm>
<para><computeroutput>long img_pack_2D_in_recip_space_slab (<link linkend="_class_bimage">Bimage</link> * p, <link linkend="_class_bimage">Bimage</link> * prec, long zsize, long slab_start, float * weight, float * weight2, double hi_res, <link linkend="_class_matrix3">Matrix3</link> mat, double scale)</computeroutput></para><para>

<para>Packs a 2D Fourier transform into a 3D reciprocal space volume. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>2D Fourier transform </para>
</entry>
                            </row>
                            <row>
                                <entry>*prec</entry>
                                <entry>
<para>3D reciprocal space slab volume. </para>
</entry>
                            </row>
                            <row>
                                <entry>zsize</entry>
                                <entry>
<para>intentional z dimension of reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>slab_start</entry>
                                <entry>
<para>start of current slab. </para>
</entry>
                            </row>
                            <row>
                                <entry>*weight</entry>
                                <entry>
<para>weigth array. </para>
</entry>
                            </row>
                            <row>
                                <entry>*weight2</entry>
                                <entry>
<para>weight squared array. </para>
</entry>
                            </row>
                            <row>
                                <entry>hi_res</entry>
                                <entry>
<para>high resolution limit. </para>
</entry>
                            </row>
                            <row>
                                <entry>mat</entry>
                                <entry>
<para>affine matrix. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>scale of reconstruction and particle magnification. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>long 0. <literallayout><computeroutput>The rotation matrix is used to determine the plane in reciprocal space
to which the 2D transform data is added. The map is assumed to be cubic
and the 2D transform square. The real space 2D image must be supplied.
This is then padded to more than twice its original size, fourier
transformed, and packed into the 3D reciprocal space block.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 815 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1aa976d053c150f485c17ce8f3c7f69535"/>    <section>
    <title>img_phase_shift_slab_to_origin()</title>
<indexterm><primary>img_phase_shift_slab_to_origin</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_phase_shift_slab_to_origin</secondary></indexterm>
<para><computeroutput>int img_phase_shift_slab_to_origin (<link linkend="_class_bimage">Bimage</link> * p, int zsize, int slab_start)</computeroutput></para><para>

<para>Phase shifts a set of reflections to the image origin. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>complex image. </para>
</entry>
                            </row>
                            <row>
                                <entry>zsize</entry>
                                <entry>
<para>slab thickness. </para>
</entry>
                            </row>
                            <row>
                                <entry>slab_start</entry>
                                <entry>
<para>slab start. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int 0. <literallayout><computeroutput>A real space translation with wrapping is equivalent to phase shifting
in reciprocal space. The phases are shifted based on the embedded
sub-image origins.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 924 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1aab732409522b4e8ff7bcb71b743a54a2"/>    <section>
    <title>img_write_data_block_with_type()</title>
<indexterm><primary>img_write_data_block_with_type</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>img_write_data_block_with_type</secondary></indexterm>
<para><computeroutput>int img_write_data_block_with_type (fstream * ftemp, <link linkend="_class_bimage">Bimage</link> * p, double avg, double std, double cutmin, double cutmax)</computeroutput></para><para>
Definition at line 1486 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1addce77847a1997c354f5f489d1dd8fef"/>    <section>
    <title>mg_fft_write()</title>
<indexterm><primary>mg_fft_write</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>mg_fft_write</secondary></indexterm>
<para><computeroutput>int mg_fft_write (<link linkend="_class_bproject">Bproject</link> * project, <link linkend="_class_vector3">Vector3</link>&lt; int &gt; size, double scale, int pad_factor, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype, double marker_radius, int fill_type, double fill)</computeroutput></para><para>

<para>Fourier transform micrographs and write to disk. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>image processing parameter structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>intended reconstruction size. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>reconstruction scale. </para>
</entry>
                            </row>
                            <row>
                                <entry>pad_factor</entry>
                                <entry>
<para>factor that determines image padding. </para>
</entry>
                            </row>
                            <row>
                                <entry>datatype</entry>
                                <entry>
<para>datatype (default complex float). </para>
</entry>
                            </row>
                            <row>
                                <entry>marker_radius</entry>
                                <entry>
<para>flag to mask out markers. </para>
</entry>
                            </row>
                            <row>
                                <entry>fill_type</entry>
                                <entry>
<para>FILL_AVERAGE, FILL_BACKGROUND, FILL_USER </para>
</entry>
                            </row>
                            <row>
                                <entry>fill</entry>
                                <entry>
<para>value to paint markers. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Bimage* reconstruction, NULL on failure. <literallayout><computeroutput>Each micrograph is padded to a square size that has power of 2
dimensions. The micrograph is transformed and the phases shifted
to the origin.
A pad factor of zero indicates use of original size.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 977 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1ad8618b6fbbfd8dbdb2799a6dc1120b0a"/>    <section>
    <title>mg_tomo_rec_prepare()</title>
<indexterm><primary>mg_tomo_rec_prepare</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>mg_tomo_rec_prepare</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* mg_tomo_rec_prepare (<link linkend="_class_bmicrograph">Bmicrograph</link> * mg, int ft_size, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; rec_size, double edge_width, double marker_radius, int fill_type, double fill, int action, double wiener, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; tile_size, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> plan)</computeroutput></para><para>
Definition at line 31 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1ae1c4304e685f8fc4c244529a65f67f60"/>    <section>
    <title>particle_tomo_reconstruct()</title>
<indexterm><primary>particle_tomo_reconstruct</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>particle_tomo_reconstruct</secondary></indexterm>
<para><computeroutput>long particle_tomo_reconstruct (<link linkend="_class_bproject">Bproject</link> * project, <link linkend="_class_bparticle">Bparticle</link> * recpart, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; recsize, double resolution, int interp_type, long ft_size, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; scale, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> planp, <link linkend="_fft_8h_1a61d23c567e69684715ea52482137a5e6">fft_plan</link> planr, int ctf_action, double wiener, <link linkend="_struct_bsymmetry">Bsymmetry</link> &amp; sym, <link linkend="_class_bstring">Bstring</link> &amp; partbase, <link linkend="_class_bstring">Bstring</link> &amp; partpath, <link linkend="_class_bstring">Bstring</link> &amp; partext)</computeroutput></para><para>

<para>Reconstructs individual particles from a tilt series. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>micrograph project. </para>
</entry>
                            </row>
                            <row>
                                <entry>*recpart</entry>
                                <entry>
<para>3D particle within the project. </para>
</entry>
                            </row>
                            <row>
                                <entry>recsize</entry>
                                <entry>
<para>particle reconstructions ize </para>
</entry>
                            </row>
                            <row>
                                <entry>resolution</entry>
                                <entry>
<para>high resolution limit for reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>interp_type</entry>
                                <entry>
<para>interpolation type. </para>
</entry>
                            </row>
                            <row>
                                <entry>ft_size</entry>
                                <entry>
<para>2D Fourier transform size. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>reconstruction scale. </para>
</entry>
                            </row>
                            <row>
                                <entry>planp</entry>
                                <entry>
<para>2D Fourier transform plan. </para>
</entry>
                            </row>
                            <row>
                                <entry>planr</entry>
                                <entry>
<para>3D Fourier transform plan. </para>
</entry>
                            </row>
                            <row>
                                <entry>ctf_action</entry>
                                <entry>
<para>flag to apply CTF to projections. </para>
</entry>
                            </row>
                            <row>
                                <entry>wiener</entry>
                                <entry>
<para>Wiener factor. </para>
</entry>
                            </row>
                            <row>
                                <entry>*sym</entry>
                                <entry>
<para>always C1. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partbase</entry>
                                <entry>
<para>particle base name for new particle reconstructions. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partpath</entry>
                                <entry>
<para>directory for new particle reconstructions. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partext</entry>
                                <entry>
<para>extension of new reconstructions. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>long number of particles. <literallayout><computeroutput>Requires the particles to be defined in all micrographs.
The partbase, partpath and partext arguments can be left empty to
use defaults.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 548 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a56126ce6933914a8c06bae3704800d17"/>    <section>
    <title>project_fourier_reconstruction_slab()</title>
<indexterm><primary>project_fourier_reconstruction_slab</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>project_fourier_reconstruction_slab</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* project_fourier_reconstruction_slab (<link linkend="_class_bproject">Bproject</link> * project, double hi_res, double scale, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, int slab_start, int slab_end, double marker_radius, int fill_type, double fill, int action, double wiener)</computeroutput></para><para>

<para>Reciprocal space reconstruction from the images in a multi-image file. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>image processing parameter structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>hi_res</entry>
                                <entry>
<para>high resolution limit. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>scale of reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>size of reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>slab_start</entry>
                                <entry>
<para>start of reconstruction slab. </para>
</entry>
                            </row>
                            <row>
                                <entry>slab_end</entry>
                                <entry>
<para>end of reconstruction slab. </para>
</entry>
                            </row>
                            <row>
                                <entry>marker_radius</entry>
                                <entry>
<para>flag and radius to mask out markers. </para>
</entry>
                            </row>
                            <row>
                                <entry>fill_type</entry>
                                <entry>
<para>FILL_AVERAGE, FILL_BACKGROUND, FILL_USER </para>
</entry>
                            </row>
                            <row>
                                <entry>fill</entry>
                                <entry>
<para>value to paint markers. </para>
</entry>
                            </row>
                            <row>
                                <entry>action</entry>
                                <entry>
<para>flag to apply CTF to projections. </para>
</entry>
                            </row>
                            <row>
                                <entry>wiener</entry>
                                <entry>
<para>Wiener factor. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Bimage* reconstruction, NULL on failure. <literallayout><computeroutput>The orientation parameters, view vector, angle of rotation and origin,
must all be set. Each image is padded to at least two times its size 
and its Fourier transform packed into 3D reciprocal space.
The figure-of-merit calculated for each reciprocal space voxel is:
           sum(w*re)^2 + sum(w*im)^2
    FOM = ---------------------------
          sum(w)*sum(w*(re^2 + im^2))
where
    re  real part
    im  imaginary part
    w   weight (inverse distance of image pixel to closest grid point)
For voxels with only one data pixel contributing to it, FOM = 0.
An image is used in the reconstruction if its selection flag has been set.
If the selection number is less than zero, all particles with selection flags
greater than zero are used. If the selection number is zero or above, all
particles with the selection flag set to the same number are used.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 329 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a4c8a5148f0492456835a080a8375eaee"/>    <section>
    <title>project_missing_mask()</title>
<indexterm><primary>project_missing_mask</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>project_missing_mask</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* project_missing_mask (<link linkend="_class_bproject">Bproject</link> * project, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; origin, double hi_res, double scale)</computeroutput></para><para>

<para>Creates a reciprocal space mask from the tilt series orientations. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>project parameter structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>size of mask. </para>
</entry>
                            </row>
                            <row>
                                <entry>origin</entry>
                                <entry>
<para>origin of mask. </para>
</entry>
                            </row>
                            <row>
                                <entry>hi_res</entry>
                                <entry>
<para>high resolution limit. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>scale of mask. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Bimage* mask, NULL on failure. <literallayout><computeroutput>The orientation parameters of the micrographs must all be set. 
A 2D mask is overlayed onto the 3D image for each micrograph.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 1582 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1ad278516c74499cc3a2e571c3ceac1a43"/>    <section>
    <title>project_tomo_reconstruct()</title>
<indexterm><primary>project_tomo_reconstruct</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>project_tomo_reconstruct</secondary></indexterm>
<para><computeroutput><link linkend="_class_bimage">Bimage</link>* project_tomo_reconstruct (<link linkend="_class_bproject">Bproject</link> * project, double hi_res, double scale, <link linkend="_class_vector3">Vector3</link>&lt; long &gt; size, int interp_type, int pad_factor, double edge_width, double marker_radius, int fill_type, double fill, int action, double wiener)</computeroutput></para><para>

<para>Reciprocal space reconstruction from the images in a multi-image file. 
<literallayout>&#160;&#xa;</literallayout>
 </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>image processing parameter structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>hi_res</entry>
                                <entry>
<para>high resolution limit. </para>
</entry>
                            </row>
                            <row>
                                <entry>scale</entry>
                                <entry>
<para>scale of reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>size</entry>
                                <entry>
<para>size of reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>interp_type</entry>
                                <entry>
<para>interpolation type. </para>
</entry>
                            </row>
                            <row>
                                <entry>pad_factor</entry>
                                <entry>
<para>factor that determines image padding. </para>
</entry>
                            </row>
                            <row>
                                <entry>edge_width</entry>
                                <entry>
<para>edge smoothing width for masks. </para>
</entry>
                            </row>
                            <row>
                                <entry>marker_radius</entry>
                                <entry>
<para>flag and radius to mask out markers. </para>
</entry>
                            </row>
                            <row>
                                <entry>fill_type</entry>
                                <entry>
<para>FILL_AVERAGE, FILL_BACKGROUND, FILL_USER </para>
</entry>
                            </row>
                            <row>
                                <entry>fill</entry>
                                <entry>
<para>value to paint markers. </para>
</entry>
                            </row>
                            <row>
                                <entry>action</entry>
                                <entry>
<para>flag to apply CTF to projections. </para>
</entry>
                            </row>
                            <row>
                                <entry>wiener</entry>
                                <entry>
<para>Wiener factor. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>Bimage* reconstruction, NULL on failure. <literallayout><computeroutput>The orientation parameters, view vector, angle of rotation and origin,
must all be set. Each image is padded to at least two times its size 
and its Fourier transform packed into 3D reciprocal space.
The figure-of-merit calculated for each reciprocal space voxel is:
           sum(w*re)^2 + sum(w*im)^2
    FOM = ---------------------------
          sum(w)*sum(w*(re^2 + im^2))
where
    re  real part
    im  imaginary part
    w   weight (inverse distance of image pixel to closest grid point)
For voxels with only one data pixel contributing to it, FOM = 0.
An image is used in the reconstruction if its selection flag has been set.
If the selection number is less than zero, all particles with selection flags
greater than zero are used. If the selection number is zero or above, all
particles with the selection flag set to the same number are used.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 131 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1a253c6d7a5b22c9dd1272768514d694dc"/>    <section>
    <title>project_tomo_reconstruct_particles()</title>
<indexterm><primary>project_tomo_reconstruct_particles</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>project_tomo_reconstruct_particles</secondary></indexterm>
<para><computeroutput>long project_tomo_reconstruct_particles (<link linkend="_class_bproject">Bproject</link> * project, double resolution, int interp_type, int pad_factor, int ctf_action, double wiener, <link linkend="_struct_bsymmetry">Bsymmetry</link> &amp; sym, <link linkend="_class_bstring">Bstring</link> &amp; partbase, <link linkend="_class_bstring">Bstring</link> &amp; partpath, <link linkend="_class_bstring">Bstring</link> &amp; partext)</computeroutput></para><para>

<para>Reconstructs particles from a tilt series. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*project</entry>
                                <entry>
<para>micrograph project. </para>
</entry>
                            </row>
                            <row>
                                <entry>resolution</entry>
                                <entry>
<para>high resolution limit for reconstruction. </para>
</entry>
                            </row>
                            <row>
                                <entry>interp_type</entry>
                                <entry>
<para>interpolation type. </para>
</entry>
                            </row>
                            <row>
                                <entry>pad_factor</entry>
                                <entry>
<para>factor that determines image padding. </para>
</entry>
                            </row>
                            <row>
                                <entry>ctf_action</entry>
                                <entry>
<para>flag to apply CTF to projections. </para>
</entry>
                            </row>
                            <row>
                                <entry>wiener</entry>
                                <entry>
<para>Wiener factor. </para>
</entry>
                            </row>
                            <row>
                                <entry>*sym</entry>
                                <entry>
<para>point group symmetry. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partbase</entry>
                                <entry>
<para>particle base name for new particle reconstructions. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partpath</entry>
                                <entry>
<para>directory for new particle reconstructions. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;partext</entry>
                                <entry>
<para>extension of new reconstructions. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>long number of particles. <literallayout><computeroutput>Requires the particles to be defined in all micrographs.
The partbase, partpath and partext arguments can be left empty to
use defaults.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 634 of file mg_tomo_rec.cpp.</para>
    </section><anchor xml:id="_mg__tomo__rec_8cpp_1ac6bc4b1bd8f695fb4a6c8f86fbc1f6b7"/>    <section>
    <title>set_value_with_datatype()</title>
<indexterm><primary>set_value_with_datatype</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>set_value_with_datatype</secondary></indexterm>
<para><computeroutput>int set_value_with_datatype (char * ptr, double value, <link linkend="_utilities_8h_1ad8ed01ff3ff33333d8e19db4d2818bb6">DataType</link> datatype)</computeroutput></para><para>

<para>Set a pointer to a value with a given data type. </para>
</para>

<para><literallayout><computeroutput>A value is inserted into a given location with the given data type.
The size of the allocated memory is channels*typesize.
</computeroutput></literallayout> 
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*ptr</entry>
                                <entry>
<para>pointer to location. </para>
</entry>
                            </row>
                            <row>
                                <entry>value</entry>
                                <entry>
<para>the value. </para>
</entry>
                            </row>
                            <row>
                                <entry>datatype</entry>
                                <entry>
<para>data type (defined in <link linkend="_rwimg_8h">rwimg.h</link>). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int 0, &lt;0 on error. </para>
</formalpara>
</para>
<para>
Definition at line 1425 of file mg_tomo_rec.cpp.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_mg__tomo__rec_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453"/>    <section>
    <title>verbose</title>
<indexterm><primary>verbose</primary><secondary>mg_tomo_rec.cpp</secondary></indexterm>
<indexterm><primary>mg_tomo_rec.cpp</primary><secondary>verbose</secondary></indexterm>
<para><computeroutput>int verbose<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
