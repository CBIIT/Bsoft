<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_spline_8cpp" xml:lang="en-US">
<title>/Users/bernard/b20/bsoft/src/util/spline.cpp File Reference</title>
<indexterm><primary>/Users/bernard/b20/bsoft/src/util/spline.cpp</primary></indexterm>
<para>

<para>Functions to calculate spline curves. </para>
 
</para>
<programlisting>#include &quot;Matrix.h&quot;
#include &quot;utilities.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_vector3">Vector3</link>&lt; double &gt; <link linkend="_spline_8cpp_1a70ae51750aa551a609d377fa83d604d4">vector3_catmull_rom_interpolate</link> (<link linkend="_class_vector3">Vector3</link>&lt; double &gt; *pnt, double t)</para>
</listitem>
            <listitem><para><link linkend="_class_vector3">Vector3</link>&lt; double &gt; * <link linkend="_spline_8cpp_1ae19ad80428de72b33a020989ff71276e">vector3_catmull_rom_spline</link> (long ncoord, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; *coords, long &amp;nspline)</para>

<para>Calculates a 2D/3D spline curve using the Catmull-Rom algorithm. </para>
</listitem>
            <listitem><para>double <link linkend="_spline_8cpp_1a3fa2ae044d65590373c6d95e83dce8d1">tps_base_func</link> (double r)</para>
</listitem>
            <listitem><para>vector&lt; double &gt; <link linkend="_spline_8cpp_1ac84177061095763ed77f46a48f6a4853">thin_plate_splines</link> (vector&lt; <link linkend="_class_vector3">Vector3</link>&lt; double &gt; &gt; points, double lambda)</para>
</listitem>
            <listitem><para>double <link linkend="_spline_8cpp_1a61a913b37f65ca7a2b0f02234984b195">tps_interpolate</link> (<link linkend="_class_vector3">Vector3</link>&lt; double &gt; &amp;loc, vector&lt; <link linkend="_class_vector3">Vector3</link>&lt; double &gt; &gt; points, vector&lt; double &gt; w)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_spline_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453">verbose</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Functions to calculate spline curves. </para>

<para><formalpara><title>Author</title>

<para>Bernard Heymann </para>
</formalpara>
<formalpara><title>Date</title>

<para>Created: 20020808 </para>

<para>Modified: 20151023 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_spline_8cpp_1ac84177061095763ed77f46a48f6a4853"/>    <section>
    <title>thin_plate_splines()</title>
<indexterm><primary>thin_plate_splines</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>thin_plate_splines</secondary></indexterm>
<para><computeroutput>vector&lt;double&gt; thin_plate_splines (vector&lt; <link linkend="_class_vector3">Vector3</link>&lt; double &gt; &gt; points, double lambda)</computeroutput></para><para>
Definition at line 111 of file spline.cpp.</para>
    </section><anchor xml:id="_spline_8cpp_1a3fa2ae044d65590373c6d95e83dce8d1"/>    <section>
    <title>tps_base_func()</title>
<indexterm><primary>tps_base_func</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>tps_base_func</secondary></indexterm>
<para><computeroutput>double tps_base_func (double r)</computeroutput></para><para>
Definition at line 103 of file spline.cpp.</para>
    </section><anchor xml:id="_spline_8cpp_1a61a913b37f65ca7a2b0f02234984b195"/>    <section>
    <title>tps_interpolate()</title>
<indexterm><primary>tps_interpolate</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>tps_interpolate</secondary></indexterm>
<para><computeroutput>double tps_interpolate (<link linkend="_class_vector3">Vector3</link>&lt; double &gt; &amp; loc, vector&lt; <link linkend="_class_vector3">Vector3</link>&lt; double &gt; &gt; points, vector&lt; double &gt; w)</computeroutput></para><para>
Definition at line 151 of file spline.cpp.</para>
    </section><anchor xml:id="_spline_8cpp_1a70ae51750aa551a609d377fa83d604d4"/>    <section>
    <title>vector3_catmull_rom_interpolate()</title>
<indexterm><primary>vector3_catmull_rom_interpolate</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>vector3_catmull_rom_interpolate</secondary></indexterm>
<para><computeroutput><link linkend="_class_vector3">Vector3</link>&lt;double&gt; vector3_catmull_rom_interpolate (<link linkend="_class_vector3">Vector3</link>&lt; double &gt; * pnt, double t)</computeroutput></para><para>
Definition at line 15 of file spline.cpp.</para>
    </section><anchor xml:id="_spline_8cpp_1ae19ad80428de72b33a020989ff71276e"/>    <section>
    <title>vector3_catmull_rom_spline()</title>
<indexterm><primary>vector3_catmull_rom_spline</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>vector3_catmull_rom_spline</secondary></indexterm>
<para><computeroutput><link linkend="_class_vector3">Vector3</link>&lt;double&gt;* vector3_catmull_rom_spline (long ncoord, <link linkend="_class_vector3">Vector3</link>&lt; double &gt; * coords, long &amp; nspline)</computeroutput></para><para>

<para>Calculates a 2D/3D spline curve using the Catmull-Rom algorithm. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>ncoord</entry>
                                <entry>
<para>number of coordinates. </para>
</entry>
                            </row>
                            <row>
                                <entry>*coords</entry>
                                <entry>
<para>node or point coordinates. </para>
</entry>
                            </row>
                            <row>
                                <entry>&amp;nspline</entry>
                                <entry>
<para>pointer to number of values in spline curve. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para><link linkend="_class_vector3">Vector3&lt;double&gt;</link>* spline curve. <literallayout><computeroutput>A Catmull-Rom spline curve is defined for 4 points {p0,p1,p2,p3} by:
    spline = 0.5*(-t*(1-t)^2)*p0 + (2-5*t^2+3*t^3)*p1 +
             t*(1+4*t-3*t^2)*p2 - t^2*(1-t)*p3
where 0 &lt;= t &lt;= 1 is the fractional distance between points p1 and p2.
Each dimension is interpolated separately.
The end segments of the spline are defined as straight lines.
</computeroutput></literallayout> </para>
</formalpara>
</para>
<para>
Definition at line 48 of file spline.cpp.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_spline_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453"/>    <section>
    <title>verbose</title>
<indexterm><primary>verbose</primary><secondary>spline.cpp</secondary></indexterm>
<indexterm><primary>spline.cpp</primary><secondary>verbose</secondary></indexterm>
<para><computeroutput>int verbose<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
