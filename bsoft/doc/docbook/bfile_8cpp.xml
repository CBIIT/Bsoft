<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_bfile_8cpp" xml:lang="en-US">
<title>/Users/bernard/b20/bsoft/src/bfile.cpp File Reference</title>
<indexterm><primary>/Users/bernard/b20/bsoft/src/bfile.cpp</primary></indexterm>
<para>

<para>Program to read file contents directly and poke single values. </para>
 
</para>
<programlisting>#include &quot;options.h&quot;
#include &quot;utilities.h&quot;
#include &lt;fstream&gt;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_bfile_8cpp_1a3f42316789a88257944e6d9460dde6c1">show_block</link> (size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a0495d1313253ce5a2a298f49cdd9e33f">show_block_hex</link> (size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1aaca8e6f148abc5c3d3d7db8a8dca104d">show_char</link> (size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a1c27d23835165f22c5fe9c6ae5e1ad80">swap_block</link> (size_t size, size_t nbytes, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1afbbc5c56a02a3742a78a92d2becafb91">show_table</link> (size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a6229023c369a70bcc14cc150a02e7d5e">show_structure</link> (size_t start, size_t size, int swap, char *strdef, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a2101d80491f80874f3918fb7c0a9eb7d">show_eer</link> (size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1ad3d88d2fc5af0adfda5aa67958dcc62f">poke_value</link> (fstream *fin, size_t loc, char typechar, double value)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a03e793661b4453838f839c295b292c47">find_string</link> (const char *string, size_t start, size_t size, unsigned char *buf)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1af402a5e474ebe586df583b111810b924">replace</link> (fstream *fin, char *rstring1, char *rstring2)</para>
</listitem>
            <listitem><para>char * <link linkend="_bfile_8cpp_1a0fa75907e65bf1d629934e7eff2e9a66">string2byte</link> (char *string)</para>
</listitem>
            <listitem><para>size_t <link linkend="_bfile_8cpp_1acebbdef2217e621abde74159c0e4a2e0">string_bytes</link> (char *string)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627">main</link> (int argc, char **argv)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a76a44b5ac5175a627d4dbeed496da52e">show_bits</link> (unsigned long val)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1a6ec286e0167fa28e5ad033fa1ef6d876">show_code</link> (unsigned long code)</para>
</listitem>
            <listitem><para>int <link linkend="_bfile_8cpp_1aaa0dd7aaa0206e70d8d955940c486e89">shift_right</link> (unsigned long &amp;bits, long n)</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_bfile_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453">verbose</link></para>
</listitem>
            <listitem><para>const char * <link linkend="_bfile_8cpp_1a4de0ad4c7190962494815c0fa7f948df">use</link> []</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Program to read file contents directly and poke single values. </para>

<para><formalpara><title>Author</title>

<para>Bernard Heymann </para>
</formalpara>
<formalpara><title>Date</title>

<para>Created: 19980129 </para>

<para>Modified: 20210430 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_bfile_8cpp_1a03e793661b4453838f839c295b292c47"/>    <section>
    <title>find_string()</title>
<indexterm><primary>find_string</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>find_string</secondary></indexterm>
<para><computeroutput>int find_string (const char * string, size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 447 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627"/>    <section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (int argc, char ** argv)</computeroutput></para><para>
Definition at line 66 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1ad3d88d2fc5af0adfda5aa67958dcc62f"/>    <section>
    <title>poke_value()</title>
<indexterm><primary>poke_value</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>poke_value</secondary></indexterm>
<para><computeroutput>int poke_value (fstream * fin, size_t loc, char typechar, double value)</computeroutput></para><para>
Definition at line 465 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1af402a5e474ebe586df583b111810b924"/>    <section>
    <title>replace()</title>
<indexterm><primary>replace</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>replace</secondary></indexterm>
<para><computeroutput>int replace (fstream * fin, char * rstring1, char * rstring2)</computeroutput></para><para>
Definition at line 503 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1aaa0dd7aaa0206e70d8d955940c486e89"/>    <section>
    <title>shift_right()</title>
<indexterm><primary>shift_right</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>shift_right</secondary></indexterm>
<para><computeroutput>int shift_right (unsigned long &amp; bits, long n)</computeroutput></para><para>
Definition at line 378 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a76a44b5ac5175a627d4dbeed496da52e"/>    <section>
    <title>show_bits()</title>
<indexterm><primary>show_bits</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_bits</secondary></indexterm>
<para><computeroutput>int show_bits (unsigned long val)</computeroutput></para><para>
Definition at line 362 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a3f42316789a88257944e6d9460dde6c1"/>    <section>
    <title>show_block()</title>
<indexterm><primary>show_block</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_block</secondary></indexterm>
<para><computeroutput>int show_block (size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 200 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a0495d1313253ce5a2a298f49cdd9e33f"/>    <section>
    <title>show_block_hex()</title>
<indexterm><primary>show_block_hex</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_block_hex</secondary></indexterm>
<para><computeroutput>int show_block_hex (size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 218 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1aaca8e6f148abc5c3d3d7db8a8dca104d"/>    <section>
    <title>show_char()</title>
<indexterm><primary>show_char</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_char</secondary></indexterm>
<para><computeroutput>int show_char (size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 236 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a6ec286e0167fa28e5ad033fa1ef6d876"/>    <section>
    <title>show_code()</title>
<indexterm><primary>show_code</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_code</secondary></indexterm>
<para><computeroutput>int show_code (unsigned long code)</computeroutput></para><para>
Definition at line 370 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a2101d80491f80874f3918fb7c0a9eb7d"/>    <section>
    <title>show_eer()</title>
<indexterm><primary>show_eer</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_eer</secondary></indexterm>
<para><computeroutput>int show_eer (size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 391 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a6229023c369a70bcc14cc150a02e7d5e"/>    <section>
    <title>show_structure()</title>
<indexterm><primary>show_structure</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_structure</secondary></indexterm>
<para><computeroutput>int show_structure (size_t start, size_t size, int swap, char * strdef, unsigned char * buf)</computeroutput></para><para>
Definition at line 298 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1afbbc5c56a02a3742a78a92d2becafb91"/>    <section>
    <title>show_table()</title>
<indexterm><primary>show_table</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>show_table</secondary></indexterm>
<para><computeroutput>int show_table (size_t start, size_t size, unsigned char * buf)</computeroutput></para><para>
Definition at line 266 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a0fa75907e65bf1d629934e7eff2e9a66"/>    <section>
    <title>string2byte()</title>
<indexterm><primary>string2byte</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>string2byte</secondary></indexterm>
<para><computeroutput>char * string2byte (char * string)</computeroutput></para><para>
Definition at line 560 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1acebbdef2217e621abde74159c0e4a2e0"/>    <section>
    <title>string_bytes()</title>
<indexterm><primary>string_bytes</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>string_bytes</secondary></indexterm>
<para><computeroutput>size_t string_bytes (char * string)</computeroutput></para><para>
Definition at line 592 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a1c27d23835165f22c5fe9c6ae5e1ad80"/>    <section>
    <title>swap_block()</title>
<indexterm><primary>swap_block</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>swap_block</secondary></indexterm>
<para><computeroutput>int swap_block (size_t size, size_t nbytes, unsigned char * buf)</computeroutput></para><para>
Definition at line 252 of file bfile.cpp.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_bfile_8cpp_1a4de0ad4c7190962494815c0fa7f948df"/>    <section>
    <title>use</title>
<indexterm><primary>use</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>use</secondary></indexterm>
<para><computeroutput>const char* use[]</computeroutput></para><para>
Definition at line 30 of file bfile.cpp.</para>
    </section><anchor xml:id="_bfile_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453"/>    <section>
    <title>verbose</title>
<indexterm><primary>verbose</primary><secondary>bfile.cpp</secondary></indexterm>
<indexterm><primary>bfile.cpp</primary><secondary>verbose</secondary></indexterm>
<para><computeroutput>int verbose<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
