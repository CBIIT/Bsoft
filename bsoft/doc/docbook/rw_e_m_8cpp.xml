<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_rw_e_m_8cpp" xml:lang="en-US">
<title>/Users/bernard/b20/bsoft/src/rwimg/rwEM.cpp File Reference</title>
<indexterm><primary>/Users/bernard/b20/bsoft/src/rwimg/rwEM.cpp</primary></indexterm>
<para>

<para>Functions for reading and writing EM files. </para>
 
</para>
<programlisting>#include &quot;rwEM.h&quot;
#include &quot;file_util.h&quot;
#include &quot;utilities.h&quot;
</programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_rw_e_m_8cpp_1a872d851cda9f52c9784952b4f6578a9f">readEM</link> (<link linkend="_class_bimage">Bimage</link> *p, int readdata)</para>

<para>Reading a EM map image file format. A 3D image format used in electron microscopy. Header size: 512 bytes (fixed). File format extensions: .em, .EM The identifier is a machine stamp in the first byte: 0 OS-9 1 VAX (VMS little endian) 2 CONVEX (historical) 3 SGI IRIX, Linux (big endian) 4 SUN 5 MAC 6 DEC UNIX, Linux (little endian) (Note: not always implemented - so unreliable) Byte order determination: The z-dimension value must be less than 256*256. Data types: 1 = byte, 2 = short, 4 = int, 5 = float, 8 = complex float. <link linkend="_class_transform">Transform</link> type: Hermitian The x-dimension contains the x-size of the full transform. </para>
</listitem>
            <listitem><para>int <link linkend="_rw_e_m_8cpp_1a4c7cd3bd85dcde767027324659f0617f">writeEM</link> (<link linkend="_class_bimage">Bimage</link> *p)</para>

<para>Writing a EM map image file format. A 3D image format used in electron microscopy. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_rw_e_m_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453">verbose</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Functions for reading and writing EM files. </para>

<para><formalpara><title>Author</title>

<para>Bernard Heymann </para>
</formalpara>
<formalpara><title>Date</title>

<para>Created: 19990418 </para>

<para>Modified: 20120321 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_rw_e_m_8cpp_1a872d851cda9f52c9784952b4f6578a9f"/>    <section>
    <title>readEM()</title>
<indexterm><primary>readEM</primary><secondary>rwEM.cpp</secondary></indexterm>
<indexterm><primary>rwEM.cpp</primary><secondary>readEM</secondary></indexterm>
<para><computeroutput>int readEM (<link linkend="_class_bimage">Bimage</link> * p, int readdata)</computeroutput></para><para>

<para>Reading a EM map image file format. A 3D image format used in electron microscopy. Header size: 512 bytes (fixed). File format extensions: .em, .EM The identifier is a machine stamp in the first byte: 0 OS-9 1 VAX (VMS little endian) 2 CONVEX (historical) 3 SGI IRIX, Linux (big endian) 4 SUN 5 MAC 6 DEC UNIX, Linux (little endian) (Note: not always implemented - so unreliable) Byte order determination: The z-dimension value must be less than 256*256. Data types: 1 = byte, 2 = short, 4 = int, 5 = float, 8 = complex float. <link linkend="_class_transform">Transform</link> type: Hermitian The x-dimension contains the x-size of the full transform. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>the image structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>readdata</entry>
                                <entry>
<para>flag to activate reading of image data. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int error code (&lt;0 means failure). </para>
</formalpara>
</para>
<para>
Definition at line 41 of file rwEM.cpp.</para>
    </section><anchor xml:id="_rw_e_m_8cpp_1a4c7cd3bd85dcde767027324659f0617f"/>    <section>
    <title>writeEM()</title>
<indexterm><primary>writeEM</primary><secondary>rwEM.cpp</secondary></indexterm>
<indexterm><primary>rwEM.cpp</primary><secondary>writeEM</secondary></indexterm>
<para><computeroutput>int writeEM (<link linkend="_class_bimage">Bimage</link> * p)</computeroutput></para><para>

<para>Writing a EM map image file format. A 3D image format used in electron microscopy. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>the image structure. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int error code (&lt;0 means failure). </para>
</formalpara>
</para>
<para>
Definition at line 115 of file rwEM.cpp.</para>
</section>
</section>
<section>
<title>Variable Documentation</title>
<anchor xml:id="_rw_e_m_8cpp_1a0b2caeb4b6f130be43e5a2f0267dd453"/>    <section>
    <title>verbose</title>
<indexterm><primary>verbose</primary><secondary>rwEM.cpp</secondary></indexterm>
<indexterm><primary>rwEM.cpp</primary><secondary>verbose</secondary></indexterm>
<para><computeroutput>int verbose<computeroutput>[extern]</computeroutput></computeroutput></para></section>
</section>
</section>
