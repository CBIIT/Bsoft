<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_rw_d_m_8h" xml:lang="en-US">
<title>/Users/bernard/b20/bsoft/include/rwDM.h File Reference</title>
<indexterm><primary>/Users/bernard/b20/bsoft/include/rwDM.h</primary></indexterm>
<para>

<para>Header file for reading and writing DM files. </para>
 
</para>
<programlisting>#include &quot;rwimg.h&quot;
</programlisting><simplesect>
    <title>Classes    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_struct_d_mhead">DMhead</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_d_m_machead">DMMachead</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_d_m3head">DM3head</link></para>
</listitem>
            <listitem><para>struct <link linkend="_struct_d_m4head">DM4head</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para>enum <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1e">DMDataType</link> { 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8dd2a8460b8cc5cfa92cbd6e9ee2f6be">NULL_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eae563f425d385ea8db45bc14157d030d8">SIGNED_INT16_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea887dab4e71e030c532414e245cab7200">REAL4_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaf963bbbe240a7e12736c6d9130d2da7b">COMPLEX8_DATA</link>
, 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea4e986d5e3e9b22cafeed244c108b1600">OBSELETE_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaf650d407da91bf56f6141cd723f84934">PACKED_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea470770a672b11f9e6440310adc7220ac">UNSIGNED_INT8_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8f423ecaca04f39b1034ef5a82dd2128">SIGNED_INT32_DATA</link>
, 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea0ac41829486d1d0c1c1d41aa83d7abd9">RGB_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea38361093c7e419d06964a97018677ee6">SIGNED_INT8_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea089407a8303fa6d4db38e64554395094">UNSIGNED_INT16_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea6521884fe75e082cd17dd87d0fc5dc93">UNSIGNED_INT32_DATA</link>
, 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eacd979de80b1c1413b5df40517e6f724a">REAL8_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eadcc8aca6cdbf27fb05020417e1bebebb">COMPLEX16_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea9e10359d3a154d39763f25f0120c0ff7">BINARY_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea57ccf9db52bd4bc51634ede9bc975e64">RGBA_FLOAT32_DATA</link>
, 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ead55a84434b6435372837508a10adcc32">RGB_UINT16_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaa138ad9ff60087bef8517519422c2f36">RGB_FLOAT64_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8fee437a6c48de1e5e02e8b4f906684e">RGBA_FLOAT64_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea7edf03d6c2a7faf12607db36230e3095">RGBA_UINT16_DATA</link>
, 
<link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea20a397f89d1da162d9701c95d83e312b">RGB_UINT8_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea46b4b23a84ca527c856c3b22aa4c56a7">RGBA_UINT8_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eafdf382abeaccfc0d088afde7e0158463">LAST_DATA</link>
, <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea0b2c38612464adb7019fae2ff54671da">OS_RGBA_UINT8_DATA</link>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_rw_d_m_8h_1a90ba1c7cfe38ae9b92543febceb84cbb">readDM</link> (<link linkend="_class_bimage">Bimage</link> *p, int readdata, int img_select)</para>

<para>Reading a Digital Micrograph image file format. </para>
</listitem>
            <listitem><para>int <link linkend="_rw_d_m_8h_1a54f70370552a2f3dae80f6ee3cea7926">writeDM</link> (<link linkend="_class_bimage">Bimage</link> *p)</para>

<para>Writing a Digital Micrograph map image file format. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Header file for reading and writing DM files. </para>

<para><formalpara><title>Author</title>

<para>Bernard Heymann </para>
</formalpara>
<formalpara><title>Date</title>

<para>Created: 20020619 </para>

<para>Modified: 20150916 <literallayout><computeroutput>Format: 2D electron microscope CCD image file format for the Digital Micrograph package
</computeroutput></literallayout> </para>
</formalpara>
</para>
</section>
<section>
<title>Enumeration Type Documentation</title>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1e"/>    <section>
    <title>DMDataType</title>
<indexterm><primary>DMDataType</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>DMDataType</secondary></indexterm>
<para><computeroutput>enum <link linkend="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1e">DMDataType</link></computeroutput></para><informaltable frame="all">
<title>Enumerator</title>
    <tgroup cols="2" align="left" colsep="1" rowsep="1">
      <colspec colname='c1'/>
      <colspec colname='c2'/>
<tbody>
<row><entry><indexterm><primary>NULL_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>NULL_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8dd2a8460b8cc5cfa92cbd6e9ee2f6be"/>NULL_DATA</entry><entry></entry></row><row><entry><indexterm><primary>SIGNED_INT16_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>SIGNED_INT16_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eae563f425d385ea8db45bc14157d030d8"/>SIGNED_INT16_DATA</entry><entry></entry></row><row><entry><indexterm><primary>REAL4_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>REAL4_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea887dab4e71e030c532414e245cab7200"/>REAL4_DATA</entry><entry></entry></row><row><entry><indexterm><primary>COMPLEX8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>COMPLEX8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaf963bbbe240a7e12736c6d9130d2da7b"/>COMPLEX8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>OBSELETE_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>OBSELETE_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea4e986d5e3e9b22cafeed244c108b1600"/>OBSELETE_DATA</entry><entry></entry></row><row><entry><indexterm><primary>PACKED_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>PACKED_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaf650d407da91bf56f6141cd723f84934"/>PACKED_DATA</entry><entry></entry></row><row><entry><indexterm><primary>UNSIGNED_INT8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>UNSIGNED_INT8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea470770a672b11f9e6440310adc7220ac"/>UNSIGNED_INT8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>SIGNED_INT32_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>SIGNED_INT32_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8f423ecaca04f39b1034ef5a82dd2128"/>SIGNED_INT32_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGB_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGB_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea0ac41829486d1d0c1c1d41aa83d7abd9"/>RGB_DATA</entry><entry></entry></row><row><entry><indexterm><primary>SIGNED_INT8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>SIGNED_INT8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea38361093c7e419d06964a97018677ee6"/>SIGNED_INT8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>UNSIGNED_INT16_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>UNSIGNED_INT16_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea089407a8303fa6d4db38e64554395094"/>UNSIGNED_INT16_DATA</entry><entry></entry></row><row><entry><indexterm><primary>UNSIGNED_INT32_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>UNSIGNED_INT32_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea6521884fe75e082cd17dd87d0fc5dc93"/>UNSIGNED_INT32_DATA</entry><entry></entry></row><row><entry><indexterm><primary>REAL8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>REAL8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eacd979de80b1c1413b5df40517e6f724a"/>REAL8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>COMPLEX16_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>COMPLEX16_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eadcc8aca6cdbf27fb05020417e1bebebb"/>COMPLEX16_DATA</entry><entry></entry></row><row><entry><indexterm><primary>BINARY_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>BINARY_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea9e10359d3a154d39763f25f0120c0ff7"/>BINARY_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGBA_FLOAT32_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGBA_FLOAT32_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea57ccf9db52bd4bc51634ede9bc975e64"/>RGBA_FLOAT32_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGB_UINT16_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGB_UINT16_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ead55a84434b6435372837508a10adcc32"/>RGB_UINT16_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGB_FLOAT64_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGB_FLOAT64_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eaa138ad9ff60087bef8517519422c2f36"/>RGB_FLOAT64_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGBA_FLOAT64_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGBA_FLOAT64_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea8fee437a6c48de1e5e02e8b4f906684e"/>RGBA_FLOAT64_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGBA_UINT16_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGBA_UINT16_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea7edf03d6c2a7faf12607db36230e3095"/>RGBA_UINT16_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGB_UINT8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGB_UINT8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea20a397f89d1da162d9701c95d83e312b"/>RGB_UINT8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>RGBA_UINT8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>RGBA_UINT8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea46b4b23a84ca527c856c3b22aa4c56a7"/>RGBA_UINT8_DATA</entry><entry></entry></row><row><entry><indexterm><primary>LAST_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>LAST_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1eafdf382abeaccfc0d088afde7e0158463"/>LAST_DATA</entry><entry></entry></row><row><entry><indexterm><primary>OS_RGBA_UINT8_DATA</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>OS_RGBA_UINT8_DATA</secondary></indexterm>
<anchor xml:id="_rw_d_m_8h_1a9ae5e142ae72d8367729fb10c19e7e1ea0b2c38612464adb7019fae2ff54671da"/>OS_RGBA_UINT8_DATA</entry><entry></entry></row>    </tbody>
    </tgroup>
</informaltable>
<para>
Definition at line 13 of file rwDM.h.</para>
</section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_rw_d_m_8h_1a90ba1c7cfe38ae9b92543febceb84cbb"/>    <section>
    <title>readDM()</title>
<indexterm><primary>readDM</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>readDM</secondary></indexterm>
<para><computeroutput>int readDM (<link linkend="_class_bimage">Bimage</link> * p, int readdata, int img_select)</computeroutput></para><para>

<para>Reading a Digital Micrograph image file format. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>the image structure. </para>
</entry>
                            </row>
                            <row>
                                <entry>readdata</entry>
                                <entry>
<para>flag to activate reading of image data. </para>
</entry>
                            </row>
                            <row>
                                <entry>img_select</entry>
                                <entry>
<para>image selection in multi-image file (-1 = all images). </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int error code (&lt;0 means failure). A 2D/3D image format used with CCD cameras in electron microscopy. File format extensions: .dm, .DM Two types: Fixed format (new) and the Macintosh format (old) Fixed format: Header size: 24 bytes (fixed). Byte order determination: An endian flag: Must be 65535 or swap everything Data types: many. Macintosh format: Hermitian Header size: 8 bytes (fixed). Byte order determination: Big-endian Data types: many. </para>
</formalpara>
</para>
<para>
Definition at line 41 of file rwDM.cpp.</para>
    </section><anchor xml:id="_rw_d_m_8h_1a54f70370552a2f3dae80f6ee3cea7926"/>    <section>
    <title>writeDM()</title>
<indexterm><primary>writeDM</primary><secondary>rwDM.h</secondary></indexterm>
<indexterm><primary>rwDM.h</primary><secondary>writeDM</secondary></indexterm>
<para><computeroutput>int writeDM (<link linkend="_class_bimage">Bimage</link> * p)</computeroutput></para><para>

<para>Writing a Digital Micrograph map image file format. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>*p</entry>
                                <entry>
<para>the image structure. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>int error code (&lt;0 means failure). A 2D/3D image format used in electron microscopy. </para>
</formalpara>
</para>
<para>
Definition at line 81 of file rwDM.cpp.</para>
</section>
</section>
</section>
