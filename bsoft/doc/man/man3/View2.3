.TH "View2< Type >" 3 "Wed Sep 1 2021" "Version 2.1.0" "Bsoft" \" -*- nroff -*-
.ad l
.nh
.SH NAME
View2< Type >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <View2\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBView2\fP ()"
.br
.ti -1c
.RI "\fBView2\fP (const \fBView2\fP &view)"
.br
.ti -1c
.RI "template<typename T > \fBView2\fP (\fBVector3\fP< T > &vec)"
.br
.ti -1c
.RI "\fBView2\fP (vector< double > &vec)"
.br
.ti -1c
.RI "\fBView2\fP (const double \fBx\fP, const double \fBy\fP, const double \fBz\fP, const double \fBangle\fP)"
.br
.ti -1c
.RI "\fBView2\fP (\fBQuaternion\fP &q)"
.br
.ti -1c
.RI "\fBView2\fP (\fBMatrix3\fP m)"
.br
.ti -1c
.RI "\fBView2\fP (double tilt, double axis)"
.br
.ti -1c
.RI "\fBView2\fP (double \fBangle\fP, \fBVector3\fP< double > axis)"
.br
.ti -1c
.RI "template<typename T2 > \fBoperator View2< T2 >\fP () const"
.br
.ti -1c
.RI "\fBView2\fP \fBoperator=\fP (const \fBView2\fP &view)"
.br
.ti -1c
.RI "\fBView2\fP \fBoperator=\fP (const vector< double > &vec)"
.br
.ti -1c
.RI "\fBView2\fP \fBoperator\-\fP ()"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBView2\fP &view)"
.br
.ti -1c
.RI "Type & \fBoperator[]\fP (size_t i)"
.br
.ti -1c
.RI "double \fBx\fP ()"
.br
.ti -1c
.RI "double \fBy\fP ()"
.br
.ti -1c
.RI "double \fBz\fP ()"
.br
.ti -1c
.RI "double \fBangle\fP ()"
.br
.ti -1c
.RI "void \fBx\fP (const double d)"
.br
.ti -1c
.RI "void \fBy\fP (const double d)"
.br
.ti -1c
.RI "void \fBz\fP (const double d)"
.br
.ti -1c
.RI "void \fBangle\fP (const double d)"
.br
.ti -1c
.RI "vector< double > \fBarray\fP ()"
.br
.ti -1c
.RI "double \fBvector_size\fP ()"
.br
.ti -1c
.RI "double \fBnormalize\fP ()"
.br
.ti -1c
.RI "void \fBnegate\fP ()"
.br
.ti -1c
.RI "\fBView2\fP \fBbackward\fP ()"
.br
.ti -1c
.RI "\fBVector3\fP< double > \fBvector3\fP ()"
.br
.ti -1c
.RI "\fBQuaternion\fP \fBquaternion\fP ()"
.br
.ti -1c
.RI "\fBMatrix3\fP \fBmatrix\fP ()"
.br
.ti -1c
.RI "void \fBrandom_view\fP ()"
.br
.ti -1c
.RI "double \fBdistance\fP (const \fBView2\fP &view)"
.br
.ti -1c
.RI "double \fBangle\fP (const \fBView2\fP &view)"
.br
.ti -1c
.RI "double \fBresidual\fP (const \fBView2\fP &view)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Type>
.br
class View2< Type >"

.PP
Definition at line 27 of file View2\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP ()\fC [inline]\fP"

.PP
Definition at line 37 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 38 of file View2\&.h\&.
.SS "template<typename Type > template<typename T > \fBView2\fP< Type >::\fBView2\fP (\fBVector3\fP< T > & vec)\fC [inline]\fP"

.PP
Definition at line 40 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (vector< double > & vec)\fC [inline]\fP"

.PP
Definition at line 41 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (const double x, const double y, const double z, const double angle)\fC [inline]\fP"

.PP
Definition at line 45 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (\fBQuaternion\fP & q)\fC [inline]\fP"

.PP
Definition at line 50 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (\fBMatrix3\fP m)\fC [inline]\fP"

.PP
Definition at line 62 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (double tilt, double axis)\fC [inline]\fP"

.PP
Definition at line 66 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP< Type >::\fBView2\fP (double angle, \fBVector3\fP< double > axis)\fC [inline]\fP"

.PP
Definition at line 70 of file View2\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "template<typename Type > double \fBView2\fP< Type >::angle ()\fC [inline]\fP"

.PP
Definition at line 99 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::angle (const double d)\fC [inline]\fP"

.PP
Definition at line 103 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::angle (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 171 of file View2\&.h\&.
.SS "template<typename Type > vector<double> \fBView2\fP< Type >::array ()\fC [inline]\fP"

.PP
Definition at line 104 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP \fBView2\fP< Type >::backward ()\fC [inline]\fP"

.PP
Definition at line 119 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::distance (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 167 of file View2\&.h\&.
.SS "template<typename Type > \fBMatrix3\fP \fBView2\fP< Type >::matrix ()\fC [inline]\fP"

.PP
Definition at line 154 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::negate ()\fC [inline]\fP"

.PP
Definition at line 118 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::normalize ()\fC [inline]\fP"

.PP
Definition at line 110 of file View2\&.h\&.
.SS "template<typename Type > template<typename T2 > \fBView2\fP< Type >::operator \fBView2\fP< T2 > () const\fC [inline]\fP"

.PP
Definition at line 75 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP \fBView2\fP< Type >::operator\- ()\fC [inline]\fP"

.PP
Definition at line 88 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP \fBView2\fP< Type >::operator= (const vector< double > & vec)\fC [inline]\fP"

.PP
Definition at line 82 of file View2\&.h\&.
.SS "template<typename Type > \fBView2\fP \fBView2\fP< Type >::operator= (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 78 of file View2\&.h\&.
.SS "template<typename Type > bool \fBView2\fP< Type >::operator== (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 92 of file View2\&.h\&.
.SS "template<typename Type > Type& \fBView2\fP< Type >::operator[] (size_t i)\fC [inline]\fP"

.PP
Definition at line 95 of file View2\&.h\&.
.SS "template<typename Type > \fBQuaternion\fP \fBView2\fP< Type >::quaternion ()\fC [inline]\fP"

.PP
Definition at line 131 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::random_view ()\fC [inline]\fP"

.PP
Definition at line 158 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::residual (const \fBView2\fP< Type > & view)\fC [inline]\fP"

.PP
Definition at line 177 of file View2\&.h\&.
.SS "template<typename Type > \fBVector3\fP<double> \fBView2\fP< Type >::vector3 ()\fC [inline]\fP"

.PP
Definition at line 130 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::vector_size ()\fC [inline]\fP"

.PP
Definition at line 107 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::x ()\fC [inline]\fP"

.PP
Definition at line 96 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::x (const double d)\fC [inline]\fP"

.PP
Definition at line 100 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::y ()\fC [inline]\fP"

.PP
Definition at line 97 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::y (const double d)\fC [inline]\fP"

.PP
Definition at line 101 of file View2\&.h\&.
.SS "template<typename Type > double \fBView2\fP< Type >::z ()\fC [inline]\fP"

.PP
Definition at line 98 of file View2\&.h\&.
.SS "template<typename Type > void \fBView2\fP< Type >::z (const double d)\fC [inline]\fP"

.PP
Definition at line 102 of file View2\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Bsoft from the source code\&.
